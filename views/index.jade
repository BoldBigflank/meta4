extends layout

prepend scripts
    script(src="/socket.io/socket.io.js")


prepend content
    .navbar.navbar-fixed-top
        .navbar-inner
            .container-fluid
                p.navbar-text.name.pull-left#playerName Name
                ul.nav.pull-right
                    li.dropdown
                        a.dropdown-toggle(href="#") 
                            span#playerScore Score
                            b.caret
                        ul.dropdown-menu#scores
    .container-fluid
        .row
            ul.thumbnails
                li.span4
                    .thumbnail.bcard#bcard
                li.span3
                    .thumbnail.wcard 
                        span#czarName Czar
                        p
                            span.badge#playersCount 0
                            |  players
                        p
                            span.badge.badge-success#entriesCount 0
                            |  entries
                        a.btn#endRound(href="#") End Round
        .alert.alert-info#feedback THIS IS THE INITIAL ALERT
            button.close(data-dismiss="alert") Ã—
        .entries
            ul.thumbnails#entries
        .hand
            ul.thumbnails#hand

    script
        var uuid = #{uuid}
        console.log("uuid: ", uuid)
        var socket = io.connect('#');
        
        var pickEntry = function(item){
            socket.emit('entry', $(item).html(), function(error){
                if(error) $('#feedback').html(error).show();
                else $(item).addClass("submitted")
                // Remove the item
                // Add new card
            })
        }

        var voteEntry = function(item){
            socket.emit('vote', $(item).html())
        }

        $("#endRound").click(function(){
            // Change the state of the game
            socket.emit("state", "vote")
        })

        $("#playerName").click(function(){
            // Change the person's name
            socket.emit('name', prompt("Enter Your Name:", ""))
        })

        // Get the user's player info
        socket.on('player', function(user){
            console.log("Player ", user)
            var playerName = (user.name != "") ? user.name : user.id
            $("#playerName").html(playerName)
            $("#hand").html("")
            for (index in user.hand){
                $("#hand").append(
                    $("<li class='span3'>").append(
                        $("<div class='thumbnail wcard'>").append(user.hand[index]).click(function(){pickEntry(this)})
                    )
                )
            }
        })

        socket.on('alert', function(data){
            console.log("ALERT: ", data)
        })

        // This function will receive all game updates
        socket.on('game', function(data){
            console.log("Game ", data)
            // Black card
            if(data.bcard){
                $('#bcard').html(data.bcard.text)
            }

            // entries
            var entries = data.entries
            if(entries != null) $("#entries").html("")
            for (index in entries){
                $("#entries").append(
                    $("<li class='span3'>").append(
                        $("<div class='thumbnail wcard'>").append(entries[index]).click(function(){voteEntry(this)})
                    )
                )
            }

            // players
            var players = data.players
            if(players != null) $("#scores").html("")
            for (index in players){
                var player = players[index]
                var playerName = (player.name != "") ? player.name : player.id

                // For my player info
                if(player.id == uuid){
                    $("#playerName").html(playerName)
                    $("#playerScore").html(playerName + " -> " + player.score)
                    if(player.id == data.czar) $('#endRound').show()
                    else $('#endRound').hide()
                    
                    if(player.hand){
                        $("#hand").html("")
                        for (index in player.hand){
                            $("#hand").append(
                                $("<li class='span3'>").append(
                                    $("<div class='thumbnail wcard'>").append(player.hand[index]).click(function(){pickEntry(this)})
                                )
                            )
                        }
                    }
                } 
                if(player.id == data.czar) $("#czarName").html(playerName)
                $("#scores").append(
                    $("<li>").append(playerName + " -> " + player.score)
                )
            }

            
            if(entries != null) $('#entriesCount').html(data.entries.length)
            if(players != null) $('#playersCount').html(data.players.length)

            if(entries && players){
                if(entries.length >= players.length - 1 ) $('#endRound').addClass('btn-primary')
                else $('#endRound').removeClass('btn-primary')
            }
            
            // state
            if(data.state != null){
                if(data.state == "entry"){
                    var help = (data.czar == uuid) ? "You are the Card Czar, you choose when to end the round" : "Pick the best white card to match the category."
                    $("#feedback").html(help)
                    $("#hand").show()
                    $("#entries").hide()
                }
                if(data.state == "vote"){
                    var help = (data.czar == uuid) ? "You are the Card Czar, pick your favorite entry." : "Wait for the Card Czar to choose their favorite."
                    $("#feedback").html(help)
                    $("#hand").hide()
                    $("#entries").show()
                }
            }
        })

        // Join the game
        socket.emit('join', uuid)
        